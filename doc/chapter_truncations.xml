<Chapter>
<Heading>Truncations of complexes</Heading>
For all the following operations, the input is a chain complex

<Display>
C:~~ \cdots \longrightarrow C_{k+2} \stackrel{d_{k+2}}{\longrightarrow}
C_{k+1} \stackrel{d_{k+1}}{\longrightarrow} C_{k}
\stackrel{d_k}{\longrightarrow} C_{k-1}
\stackrel{d_{k-1}}{\longrightarrow} C_{k-2} \longrightarrow \cdots
</Display>

and either an integer <M>i</M> or two integers <M>i \geq j</M>.  A
<E>truncation</E> of <M>C</M> with respect to <M>i</M> is a new
complex which is identical to <M>C</M> in all degrees strictly greater
than (or, strictly lower than) <M>i</M>, and <M>0</M> in all degrees
strictly lower than (or, in the latter case above, strictly greater
than) <M>i</M>.  What happens in degree <M>i</M> depends on the
truncation. <P />

<Section>
<Heading>Good truncations</Heading>

The homologies of a good truncation of <M>C</M> are either the same as
those of <M>C</M>, or <M>0</M>.  In particular, when truncating in degree
<M>i</M>, the <M>i</M>th homology is <M>0</M>.

<ManSection>
  <Oper Name="GoodTruncationBelow" Arg="C,i" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i</Arg> -- an integer.<Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow C_{i+2} \longrightarrow C_{i+1}
    \longrightarrow \mathrm{Ker}~ d_i \longrightarrow 0
    \longrightarrow 0 \longrightarrow \cdots
  </Display>
  </Returns>
</ManSection>

<ManSection>
  <Oper Name="GoodTruncationAbove" Arg="C,i" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i</Arg> -- an integer.<Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow 0 \longrightarrow C_{i}/\mathrm{Ker}~ d_i
    \longrightarrow C_{i-1} \longrightarrow C_{i-2} \longrightarrow
    \cdots
  </Display>
  </Returns>
</ManSection>

<ManSection>
  <Oper Name="GoodTruncation" Arg="C,i,j" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i,j</Arg> -- integers
    with <M><Arg>i</Arg> \geq <Arg>j</Arg></M>. <Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow 0 \longrightarrow C_{i}/\mathrm{Ker}~ d_i
    \longrightarrow C_{i+1} \longrightarrow \cdots \longrightarrow
    C_{j+1} \longrightarrow \mathrm{Ker}~ d_j \longrightarrow 0 \longrightarrow
    \cdots
  </Display>
  </Returns>
  <Description>
    In particular, if <M><Arg>i</Arg>=<Arg>j</Arg></M>, the returned
    complex is the zero complex.
  </Description>
</ManSection>

</Section>

<Section>
<Heading>Brutal truncations</Heading>

The brutal truncations may introduce a non-zero homology group in
degree <M>i</M> which is not the same as the <M>i</M>th homology of
<M>C</M>.  Hence, they may be of less mathematical interest than the
good truncations, but from a programmer's point of view they are
useful.

<ManSection>
  <Oper Name="BrutalTruncationBelow" Arg="C,i" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i</Arg> -- an integer.<Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow C_{i+2} \longrightarrow C_{i+1}
    \longrightarrow C_{i} \longrightarrow 0 \longrightarrow 0
    \longrightarrow \cdots
  </Display>
  </Returns>
  <Description>
  </Description>
</ManSection>

<ManSection>
  <Oper Name="BrutalTruncationAbove" Arg="C,i" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i</Arg> -- an integer.<Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow 0 \longrightarrow 0 \longrightarrow C_i
    \longrightarrow C_{i-1} \longrightarrow C_{i-2} \longrightarrow
    \cdots
  </Display>
  </Returns>
  <Description>
  </Description>
</ManSection>

<ManSection>
  <Oper Name="BrutalTruncation" Arg="C,i,j" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i,j</Arg> -- integers
    with <M><Arg>i</Arg> \geq <Arg>j</Arg></M>. <Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow 0 \longrightarrow 0 \longrightarrow C_{i}
    \longrightarrow \cdots \longrightarrow C_{j} \longrightarrow 0
    \longrightarrow 0 \longrightarrow \cdots
  </Display>
  </Returns>
  <Description> In particular, if <M><Arg>i</Arg>=<Arg>j</Arg></M>,
  the returned complex is the stalk complex with <M>C_i</M> in degree
  <Arg>i</Arg>.
  </Description>
</ManSection>

</Section>

<Section>
<Heading>Kernel and cokernel truncations</Heading>

The following truncations are not usually found in textbooks.
However, they are simple constructions which may be useful when
working with e.g. projective resolutions.  Note that they can
sometimes return complexes which has <E>more</E> non-zero entries than
the original complex.

<ManSection>
  <Oper Name="KernelTruncation" Arg="C,i" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i</Arg> -- an integer.<Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow 0 \longrightarrow \ker{d_i} \longrightarrow
    C_i \longrightarrow C_{i-1} \longrightarrow C_{i-2}
    \longrightarrow \cdots
  </Display>
  </Returns>
  <Description>
  </Description>
</ManSection>

<ManSection>
  <Oper Name="CokernelTruncation" Arg="C,i" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i</Arg> -- an integer.<Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow C_{i+1} \longrightarrow C_{i}
    \longrightarrow C_{i-1} \longrightarrow \cok{d_i} \longrightarrow
    0 \longrightarrow \cdots
  </Display>
  </Returns>
  <Description>
  </Description>
</ManSection>

<ManSection>
  <Oper Name="KernelCokernelTruncation" Arg="C,i,j" />
  <Description>
    Arguments: <Arg>C</Arg> -- a complex, <Arg>i,j</Arg> -- integers
    with <M><Arg>i</Arg> \geq <Arg>j</Arg></M>. <Br />
  </Description>
  <Returns>The complex
  <Display>
    \cdots \longrightarrow 0 \longrightarrow \ker{d_i} \longrightarrow
    C_{i} \longrightarrow C_{i-1} \longrightarrow \cdots
    \longrightarrow C_{j+1} \longrightarrow C_{j} \longrightarrow
    C_{j+1} \longrightarrow \cok{d_j} \longrightarrow 0
    \longrightarrow \cdots
  </Display>
  </Returns>
  <Description>In particular, if <M><Arg>i</Arg>=<Arg>j</Arg></M>,
  the returned complex is 
  <Display>
    \cdots \longrightarrow 0 \longrightarrow \ker{d_i} \longrightarrow
    C_{i} \longrightarrow C_{i-1} \longrightarrow \cdots
    \longrightarrow C_{j+1} \longrightarrow C_{j} \longrightarrow
    C_{j+1} \longrightarrow \cok{d_j} \longrightarrow 0
    \longrightarrow \cdots
  </Display>
  </Description>
</ManSection>


</Section>

</Chapter>